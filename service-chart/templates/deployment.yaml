apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      annotations:
        "consul.hashicorp.com/connect-service": {{ .Values.name }}
        "consul.hashicorp.com/connect-inject": "true"
        "consul.hashicorp.com/connect-service-upstreams": "{{ .Values.upstreams }}"
        "consul.hashicorp.com/connect-service-protocol": "http"
    spec:
      serviceAccountName: {{ .Values.name }}
      containers:
        - name: "service"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: DC
            value: {{ .Values.dc }}
          - name: SERVICE_NAME
            value: {{ .Values.name }}
          - name: ENDPOINTS
            value: "{{ .Values.endpoints }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 150
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: http
        - name: prometheus-envoy
          image: "envoyproxy/envoy:latest"
          ports:
            - name: http
              containerPort: 19001
          command:
            - "sh"
            - "-c"
            - |
              cat >/etc/envoy/envoy.yaml <<EOF
              static_resources:
                listeners:
                  - address:
                      socket_address:
                        address: 0.0.0.0
                        port_value: 19001
                    filter_chains:
                      - filters:
                          - name: envoy.http_connection_manager
                            typed_config:
                              "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                              stat_prefix: prometheus-envoy
                              http_filters:
                                - name: envoy.router
                                  config: {}
                              route_config:
                                name: local_route
                                virtual_hosts:
                                  {
                                    name: local_service,
                                    domains: ["*"],
                                    routes: [
                                    {
                                      match: { prefix: "/metrics" },

                                      route:
                                        {
                                          cluster: envoy-admin,
                                          prefix_rewrite: "/stats/prometheus"
                                        }
                                    }
                                    ]
                                  }
                clusters:
                - name: envoy-admin
                  connect_timeout: 0.25s
                  type: STATIC
                  load_assignment: {
                    cluster_name: envoy-admin,
                    endpoints: {
                      lb_endpoints: [
                      {
                        endpoint: {
                          address: {
                            socket_address: { address: 127.0.0.1, port_value: 19000 },
                          }
                        }
                      }
                      ]
                    }
                  }
              EOF
              envoy -c /etc/envoy/envoy.yaml --base-id 1
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
